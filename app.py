from Bio import Entrez, SeqIO
from Bio.SeqUtils import molecular_weight, gc_fraction  # Usamos gc_fraction en lugar de gc_content
import streamlit as st
import matplotlib.pyplot as plt
from collections import Counter
import pandas as pd

# Funci√≥n para obtener la secuencia desde GenBank
def get_sequence_from_genbank(genbank_id):
    Entrez.email = "a223201128@unison.mx"  # Cambia esto por tu correo
    try:
        # Buscar el ID en GenBank
        handle = Entrez.efetch(db="nucleotide", id=genbank_id, rettype="gb", retmode="text")
        record = SeqIO.read(handle, "genbank")
        return record
    except Exception as e:
        st.error(f"Error al obtener la secuencia de GenBank: {e}")
        return None

# P√°gina principal
st.sidebar.header("Nucle√≥tidos Operaciones üß¨")
sidebar_render = st.sidebar.radio("Opciones : ", ["Inicio", "An√°lisis de secuencia de GenBank", "Par√°metros de la estructura", "Visualizador de nucle√≥tidos"])

# P√°gina de inicio
if sidebar_render == "Inicio":
    st.title('üß¨ **Bioinform√°tica: An√°lisis de Nucle√≥tidos desde GenBank**')

    # Descripci√≥n y subsecciones
    st.markdown("""
    Este tablero tiene el objetivo de facilitar el an√°lisis y visualizaci√≥n de secuencias de nucle√≥tidos como ADN y ARN. 
    Puedes ingresar un ID de GenBank para obtener la secuencia asociada y estudiar sus propiedades. Las secciones disponibles son:
    - **üî¨ An√°lisis de secuencia de GenBank**: Ingresa un ID de GenBank y analiza la secuencia de nucle√≥tidos.
    - **üß¨ Par√°metros de la estructura**: Analiza caracter√≠sticas estructurales como el contenido de GC y el peso molecular de las secuencias.
    - **üîç Secuencia de nucle√≥tidos**: Visualiza la secuencia y la proporci√≥n de bases de diversas secuencias de ADN/ARN.
    - **üåê Visualizaci√≥n 3D de nucle√≥tidos**: Introduce un c√≥digo PDB y explora la estructura tridimensional de secuencias de ADN/ARN.
    """)

# An√°lisis de secuencia de nucle√≥tidos desde GenBank
if sidebar_render == "An√°lisis de secuencia de GenBank":
    st.title("üî¨ An√°lisis de Secuencia de Nucle√≥tidos desde GenBank")
    st.markdown("Ingresa un **ID de GenBank** para analizar la secuencia de ADN/ARN ‚¨áÔ∏è")

    # Entrada de ID de GenBank
    genbank_id = st.text_input("üß¨ Ingresa el ID de GenBank:", "")

    if genbank_id:
        with st.spinner("Cargando datos desde GenBank... üïí"):
            record = get_sequence_from_genbank(genbank_id)
            if record:
                st.success("¬°Secuencia obtenida exitosamente! üéâ", icon="‚úÖ")

                # Mostrar el nombre del organismo
                organism = record.annotations.get("organism", "Desconocido")
                st.markdown(f"**ü¶† Organismo o especie:** {organism}")

                # Mostrar la secuencia de nucle√≥tidos
                st.markdown(f"**üîñ ID de GenBank:** `{record.id}`")
                st.markdown(f"**üìú Descripci√≥n:** {record.description}")
                st.markdown("**üß™ Secuencia de nucle√≥tidos:**")
                st.code(str(record.seq), language="text")

                # Propiedades de la secuencia
                st.markdown("**1Ô∏è‚É£ Contenido de GC:**")
                gc_percentage = round(gc_fraction(record.seq) * 100, 2)  # Usar gc_fraction en lugar de gc_content
                st.info(f"‚öñÔ∏è **Contenido de GC:** `{gc_percentage}%`")
                st.markdown("El contenido de GC es la proporci√≥n de bases de guanina y citosina en una secuencia de ADN.")
                
                # Peso molecular de la secuencia
                seq_weight = round(molecular_weight(record.seq), 2)
                st.markdown("**2Ô∏è‚É£ Peso molecular de la secuencia:**")
                st.info(f"‚öñÔ∏è **Peso molecular:** `{seq_weight} Da`")
                st.markdown("El peso molecular de una secuencia de ADN o ARN es el valor calculado sumando el peso de todos los nucle√≥tidos.")

                # Gr√°fico de la distribuci√≥n de las bases
                base_counts = dict(Counter(record.seq))
                st.markdown("**3Ô∏è‚É£ Distribuci√≥n de bases (A, T, C, G):**")
                st.bar_chart(base_counts)

                st.markdown("La distribuci√≥n de bases muestra cu√°ntas veces aparece cada base (A, T, C, G) en la secuencia.")

